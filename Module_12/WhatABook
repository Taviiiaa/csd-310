
import mysql.connector
from mysql.connector import errorcode
""" database config object """
config = {
    "user": "whatabook_user",
    "password": "MySQL8IsGreat!",
    "host": "127.0.0.1",
    "database": "whatabook",
    "raise_on_warnings": True
}

def Show_Menu():
    print("\n -- WHATABOOK --")
    print("\n 1. Display Books\n 2. Display Store Locations\n 3. My Account\n 4. Exit Program\n")

mainMenuOptions = ["1", "2", "3", "4"]
choice = input("Click 1 for display books, 2 for location, and 3 for my account, and 4 to exit.")
while choice not in mainMenuOptions:
        print("\n** INVALID SELECTION: **")
        print("\n 1. Display Books\n 2. Display Store Locations\n 3. My Account\n 4. Exit Program\n")
        choice = input("Click 1 for display books, 2 for location, and 3 for my account, and 4 to exit.")
if choice in mainMenuOptions:
        validChoice = int(choice)

def Show_Books(_cursor):

   
    _cursor.execute("SELECT book_id, book_name, author, details FROM book")
    books = _cursor.fetchall()
    print("\n -- BOOK LISTINGS --\n")
    for B in books:
        print(f" Book Name: {B[1]}\n Book Author: {B[2]}\n Book Details: {B[3]}\n")

def Show_Location(_cursor):

    
    _cursor.execute("SELECT store_id, locale FROM store")
    stores = _cursor.fetchall()
    print("\n -- CURRENT STORE LOCATIONS -- \n")
    for i in stores:
        print(f" Location: {i[1]}\n")

def validate_User():
    try:
        print("\n -- ACCOUNT LOGIN --\n")

        validUserIds = ["1", "2", "3"]
        userID = input("PLEASE ENTER YOUR USER ID: ")
        while userID not in validUserIds:
            print("\n** INVALID USER ID. **\n")
            userID = input("PLEASE ENTER YOUR USER ID: ")

        if userID in validUserIds:
            return userID
    except Exception as e:
        print("An error occurred:", e)
    
def Show_Account_menu():
    try:
        print("\n-- ACCOUNT MAIN MENU --\n")
        print(" 1. Show Wishlist\n 2. Add A Book To Your Wishlist\n 3. Main Menu\n 4. Exit Program\n")
        
        validAccountOptions = ["1", "2", "3", "4"]
        while True:
            accountOptions = input("\nPLEASE ENTER THE NUMBER FOR SELECTION: ")
            if accountOptions in validAccountOptions:
                validAccountOption = int(accountOptions)
                return validAccountOption
            else:
                print("\n** INVALID SELECTION: **")
    
    except Exception as error:
        print("An error occurred:")

def show_wishlist(_cursor, _user_id):
    _cursor.execute("SELECT user.user_id, user.first_name, user.last_name, book.book_id, book.book_name, book.author " + 
                    "FROM wishlist " + 
                    "INNER JOIN user ON wishlist.user_id = user.user_id " + 
                    "INNER JOIN book ON wishlist.book_id = book.book_id " + 
                    "WHERE user.user_id = {}".format(_user_id))
    
    wishlist = _cursor.fetchall()
    print("\n   -- USER WISHLIST BOOKS --")

    for book in wishlist:
        print(" Book Name: {}\n  Author: {}\n".format(book[4], book[5]))

    
def show_books_to_add(_cursor, _user_id): 
    availableBooks = ("SELECT book_id, book_name, author, details FROM book " +
                    "WHERE book_id NOT IN (SELECT book_id FROM wishlist WHERE user_id = {})".format(_user_id))     
    _cursor.execute(availableBooks)
    booksThatCanBeAdded = _cursor.fetchall()
    print("\n -- BOOKS THAT CAN BE ADDED -- \n")
    for i in booksThatCanBeAdded:
        print(f"\n Book ID: {i[0]}\n Book Name: {i[1]}\n")
    
""" ADDING BOOK TO WISHLIST METHOD """
def add_book_to_wishlist(_cursor, _user_id, _book_id):
    _cursor.execute("INSERT INTO wishlist(user_id, book_id) VALUES({}, {})".format(_user_id, _book_id))

""" DISPLAYING USER WISHLIST METHOD """
def displayWishlist(_cursor, _user_id):

    _cursor.execute("SELECT user.user_id, user.first_name, user.last_name, book.book_id, book.book_name, book.author " + 
                    "FROM wishlist INNER JOIN user ON wishlist.user_id = user.user_id INNER JOIN book ON wishlist.book_id = book.book_id " + 
                    "WHERE user.user_id = {}".format(_user_id))

    wishlist = _cursor.fetchall()

try:
    db = mysql.connector.connect(**config)
    cursor = db.cursor()
    print("\n Welcome to Whatabook! ")

    user_selection = Show_Menu()

    while user_selection != 4:

        if user_selection == 1:
            Show_Books(cursor)
        
        if user_selection == 2:
            Show_Location(cursor)

        if user_selection == 3:
            my_user_id = validate_User()
            account_option = Show_Account_menu()

            while account_option != 3:
                
                if account_option == 1:
                    show_wishlist(cursor, my_user_id)

                if account_option == 2:
                    show_books_to_add(cursor, my_user_id)
                
                book_id = int(input("\n Enter book id: "))
                add_book_to_wishlist(cursor, my_user_id, book_id)
                db.commit()
                print("\n   Book id: {} is added to the wishlist!".format(book_id))

                account_option = Show_Account_menu()
                
                if account_option < 0 or account_option > 4:
                    print("\n   Option unavailable, try again...")

            account_option = Show_Account_menu()
        if user_selection < 0 or user_selection > 4:
            print("\n   Option unavailable, try again...")

        user_selection = Show_Menu()

    print("\n\n End of Program...")

except mysql.connector.Error as err:
    if err.errno == errorcode.ER_ACCESS_DENIED_ERROR:
        print("  The supplied username or password are invalid")

    elif err.errno == errorcode.ER_BAD_DB_ERROR:
        print("  The specified database does not exist")

    else:
        print(err)

finally:
    
    db.close()
